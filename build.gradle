buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${project.forgegradle_version}"
        classpath "org.spongepowered:mixingradle:${project.mixingradle_version}"
        classpath "com.github.jengelman.gradle.plugins:shadow:${project.shadowjar_version}"
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = project.project_version
group = project.project_group
archivesBaseName = project.project_archivesBaseName

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    mappings channel: "${project.mappings_channel}", version: "${project.mappings_version}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'xyz.aesthetical.astra.mixin.ForgeMixinLoader'
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    dependency

    all {
        resolutionStrategy {
            force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
        }
    }
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = 'swt-repo'
        url = "https://maven-eclipse.github.io/maven"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    mavenCentral()
    jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    // keep this at 0.7.11-SNAPSHOT so it works with future
    dependency("org.spongepowered:mixin:${project.mixin_version}") {
        exclude module: 'commons-io'
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'launchwrapper'
        exclude module: 'log4j-core'
    }

    // this makes mixins work, don't ask
    annotationProcessor("org.spongepowered:mixin:${project.mixin_annotation_processor_version}:processor") {
        exclude module: 'gson'
    }

    dependency("club.minnced:java-discord-rpc:${project.discord_rpc_version}") {
        exclude module: 'jna'
    }

    dependency("org.json:json:${project.json_version}")

    implementation "com.github.cabaletta:baritone:${project.baritone_version}"
    dependency("cabaletta:baritone-api:${project.baritone_api_version}")

    implementation configurations.dependency
}

compileJava {
    options.encoding = "UTF-8"
}

jar {
    manifest {
        attributes([
            "MixinConfigs": "mixins.astra.json",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "FMLCorePluginContainsFMLMod": true,
            "FMLCorePlugin": "xyz.aesthetical.astra.mixin.ForgeMixinLoader",
            'ForceLoadAsMod': true
        ])
    }

    from {
        configurations.dependency.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

shadowJar {
    exclude 'dummyThing' // remove the dummy modinfo file that forge uses
    classifier = 'release' // add -releas at the end of the JAR
}

mixin {
    defaultObfuscationEnv "searge"
    add sourceSets.main, "mixins.astra.refmap.json" // add a refrence map for obfuscated properties/methods/classes (mappings)
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath // make sure to reobfuscate the jar shadowJar makes
    }
}

build.dependsOn(shadowJar) // so we run shadowJar with the build task